
{
  "entities": {
    "UserProfile": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "UserProfile",
      "type": "object",
      "description": "Represents a user's profile within the BeMatch application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the UserProfile entity."
        },
        "firebaseUid": {
          "type": "string",
          "description": "The Firebase Authentication UID associated with this user."
        },
        "fullName": {
          "type": "string",
          "description": "The user's full name."
        },
        "dateOfBirth": {
          "type": "string",
          "description": "The user's date of birth.",
          "format": "date-time"
        },
        "gender": {
          "type": "string",
          "description": "The user's gender."
        },
        "email": {
          "type": "string",
          "description": "The user's email address.",
          "format": "email"
        },
        "profilePictureUrl": {
          "type": "string",
          "description": "URL of the user's profile picture.",
          "format": "uri"
        },
        "interests": {
          "type": "array",
          "description": "A list of the user's interests.",
          "items": {
            "type": "string"
          }
        },
        "bio": {
          "type": "string",
          "description": "A short biography or description of the user."
        }
      },
      "required": [
        "id",
        "firebaseUid",
        "fullName",
        "dateOfBirth",
        "gender",
        "email"
      ]
    },
    "Match": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Match",
      "type": "object",
      "description": "Represents a potential or confirmed match between two users.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Composite key for the match, typically 'user1Id_user2Id' sorted."
        },
        "user1Id": {
          "type": "string",
          "description": "The UID of the user who initiated the swipe."
        },
        "user2Id": {
          "type": "string",
          "description": "The UID of the user who was swiped."
        },
        "status": {
            "type": "string",
            "enum": ["liked", "disliked", "matched"],
            "description": "The status of the interaction."
        },
        "timestamp": {
          "type": "string",
          "description": "The date and time when the interaction occurred.",
          "format": "date-time"
        },
        "matchDate": {
          "type": "string",
          "description": "The date and time when the match was confirmed.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "user1Id",
        "user2Id",
        "status",
        "timestamp"
      ]
    },
    "ChatMessage": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ChatMessage",
      "type": "object",
      "description": "Represents a single message within a chat conversation.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the ChatMessage entity."
        },
        "matchId": {
          "type": "string",
          "description": "Reference to Match. (Relationship: Match 1:N ChatMessage)"
        },
        "senderId": {
          "type": "string",
          "description": "Reference to UserProfile who sent the message. (Relationship: UserProfile 1:N ChatMessage)"
        },
        "text": {
          "type": "string",
          "description": "The text content of the message."
        },
        "timestamp": {
          "type": "string",
          "description": "The date and time when the message was sent.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "matchId",
        "senderId",
        "text",
        "timestamp"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous",
      "google.com"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "UserProfile",
          "schema": {
            "$ref": "#/backend/entities/UserProfile"
          },
          "description": "Stores public user profile data.",
          "params": [
            {
              "name": "userId",
              "description": "The Firebase UID of the user."
            }
          ]
        }
      },
      {
        "path": "/matches/{matchId}",
        "definition": {
          "entityName": "Match",
          "schema": {
            "$ref": "#/backend/entities/Match"
          },
          "description": "Stores interaction data (likes, dislikes, matches) between two users. The document ID is a composite key of the two user UIDs.",
          "params": [
            {
              "name": "matchId",
              "description": "Composite ID, e.g., 'uid1_uid2'."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/matches/{matchId}",
        "definition": {
          "entityName": "Match",
          "schema": {
            "$ref": "#/backend/entities/Match"
          },
          "description": "Stores denormalized data for confirmed matches for a specific user, allowing for easy querying of a user's match list.",
          "params": [
            {
              "name": "userId",
              "description": "The Firebase UID of the user."
            },
            {
              "name": "matchId",
              "description": "The unique ID of the match."
            }
          ]
        }
      },
      {
        "path": "/matches/{matchId}/messages/{messageId}",
        "definition": {
          "entityName": "ChatMessage",
          "schema": {
            "$ref": "#/backend/entities/ChatMessage"
          },
          "description": "Stores chat messages for a specific confirmed match. Access is controlled by match membership.",
          "params": [
            {
              "name": "matchId",
              "description": "The unique ID of the match."
            },
            {
              "name": "messageId",
              "description": "The unique ID of the chat message."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is simplified to improve query performance and reliability for the core matching feature. Interactions (likes/dislikes) are now stored in a root `matches` collection, which prevents issues with subcollection queries. When a confirmed match occurs, denormalized data is written to a subcollection under each user (`/users/{userId}/matches`) to easily populate their chat list. This separation of concerns—a root collection for all interactions and a user-specific subcollection for confirmed matches—optimizes for both write operations during swiping and read operations for displaying a user's personal match list."
  }
}
