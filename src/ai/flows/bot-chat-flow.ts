
'use server';
/**
 * @fileOverview BotlarÄ±n sohbet yeteneklerini yÃ¶neten yapay zeka akÄ±ÅŸÄ±.
 *
 * Bu dosya, bir kullanÄ±cÄ± bir bot ile konuÅŸtuÄŸunda botun vereceÄŸi cevaplarÄ± Ã¼retir.
 * Gemini AI modelini kullanarak, sohbetin geÃ§miÅŸini analiz eder ve baÄŸlama uygun,
 * doÄŸal ve insan benzeri bir yanÄ±t oluÅŸturur.
 *
 * - generateBotReply: Ana yapay zeka akÄ±ÅŸÄ±nÄ± Ã§aÄŸÄ±ran ve bot cevabÄ±nÄ± dÃ¶ndÃ¼ren fonksiyon.
 * - BotReplyInput: AkÄ±ÅŸÄ±n girdi ÅŸemasÄ± (sohbet geÃ§miÅŸi ve diÄŸer detaylar).
 * - BotReplyOutput: AkÄ±ÅŸÄ±n Ã§Ä±ktÄ± ÅŸemasÄ± (Ã¼retilen bot cevabÄ±).
 */

import { ai } from '@/ai/genkit';
import { z } from 'genkit';

// TÃ¼rkiye'deki bazÄ± popÃ¼ler ÅŸehirler ve ilÃ§eler. Bot "nerelisin?" sorusuna buradan cevap seÃ§ecek.
const turkishLocations = [
  "Ä°zmir, KarÅŸÄ±yaka", "Ankara, Ã‡ankaya", "Ä°stanbul, KadÄ±kÃ¶y", "Antalya, MuratpaÅŸa",
  "Bursa, NilÃ¼fer", "EskiÅŸehir, TepebaÅŸÄ±", "MuÄŸla, Bodrum", "AydÄ±n, KuÅŸadasÄ±",
  "Ä°stanbul, BeÅŸiktaÅŸ", "Ankara, KÄ±zÄ±lay", "Ä°zmir, Bornova"
];

// Botun kiÅŸiliÄŸini ve cevap tarzÄ±nÄ± belirleyen temel yapay zeka talimatlarÄ±.
const botPersonaInstruction = `
  Sen bir flÃ¶rt uygulamasÄ±nda sohbet eden, ismi {{botName}} olan, {{botAge}} yaÅŸÄ±nda bir insansÄ±n. 
  KullanÄ±cÄ±nÄ±n ismi {{userName}}.
  Senin amacÄ±n arkadaÅŸ canlÄ±sÄ±, esprili, biraz flÃ¶rtÃ¶z ve meraklÄ± bir tavÄ±rla sohbeti devam ettirmek. 
  CEVAPLARINI HER ZAMAN Ã‡OK KISA TUT. Genellikle 1-2 cÃ¼mleyi geÃ§mesin. Asla uzun paragraflar yazma.
  Asla bir yapay zeka olduÄŸunu sÃ¶yleme. Her zaman insan gibi davran.
  
  Sana sorulan bazÄ± Ã¶zel sorulara ÅŸÃ¶yle cevap ver:
  - "Nerelisin?", "Nerede yaÅŸÄ±yorsun?" gibi sorulara: Rastgele bir yer seÃ§erek "Aslen {{location}}'lÄ±yÄ±m ama ÅŸimdi merkezdeyim, sen?" gibi cevaplar ver.
  - "Ne iÅŸ yapÄ±yorsun?" gibi sorulara: "Grafik tasarÄ±mcÄ±yÄ±m, renklerle oynamayÄ± seviyorum.", "Bir startup'ta yazÄ±lÄ±mcÄ±yÄ±m.", "Sosyal medya uzmanÄ±yÄ±m, gÃ¼nÃ¼m memlere bakarak geÃ§iyor :)", "HenÃ¼z Ã¶ÄŸrenciyim, keyfini Ã§Ä±karÄ±yorum." gibi Ã§eÅŸitli ve modern mesleklerden birini seÃ§.
  - Asla "sana nasÄ±l yardÄ±mcÄ± olabilirim?" gibi kurumsal bir dil kullanma.
  - Ã‡ok iltifat etme, samimi ve doÄŸal ol.
  - CevaplarÄ±nda emojiler kullanabilirsin ama abartma. ğŸ˜Š, ğŸ˜‰, ğŸ¤” gibi basit emojiler tercih et.
`;

/**
 * Yapay zeka akÄ±ÅŸÄ±nÄ±n girdi (input) ÅŸemasÄ±.
 * Zod kÃ¼tÃ¼phanesi ile bu ÅŸemanÄ±n yapÄ±sÄ± ve veri tipleri tanÄ±mlanÄ±r.
 */
export const BotReplyInputSchema = z.object({
  botProfile: z.object({
    fullName: z.string().describe("Botun tam adÄ±."),
    age: z.number().describe("Botun yaÅŸÄ±."),
    bio: z.string().describe("Botun kÄ±sa biyografisi."),
    interests: z.array(z.string()).describe("Botun ilgi alanlarÄ±.")
  }).describe("Cevap verecek olan botun profil bilgileri."),
  userName: z.string().describe("Bot ile konuÅŸan gerÃ§ek kullanÄ±cÄ±nÄ±n adÄ±."),
  conversationHistory: z.array(z.object({
    isUser: z.boolean().describe("Bu mesajÄ±n kullanÄ±cÄ± tarafÄ±ndan mÄ± yoksa bot tarafÄ±ndan mÄ± gÃ¶nderildiÄŸini belirtir."),
    message: z.string().describe("Sohbetteki mesaj iÃ§eriÄŸi."),
  })).describe("Bot ve kullanÄ±cÄ± arasÄ±ndaki geÃ§miÅŸ sohbet dÃ¶kÃ¼mÃ¼."),
});
export type BotReplyInput = z.infer<typeof BotReplyInputSchema>;

/**
 * Yapay zeka akÄ±ÅŸÄ±nÄ±n Ã§Ä±ktÄ± (output) ÅŸemasÄ±.
 * Botun Ã¼reteceÄŸi cevabÄ±n yapÄ±sÄ±nÄ± tanÄ±mlar.
 */
export const BotReplyOutputSchema = z.object({
  reply: z.string().describe("Yapay zeka tarafÄ±ndan Ã¼retilen sohbet cevabÄ±."),
});
export type BotReplyOutput = z.infer<typeof BotReplyOutputSchema>;

/**
 * Bu ana fonksiyon, `generateBotReplyFlow` akÄ±ÅŸÄ±nÄ± Ã§aÄŸÄ±rÄ±r.
 * DÄ±ÅŸarÄ±dan bu fonksiyon kullanÄ±lacak.
 * @param input BotReplyInput ÅŸemasÄ±na uygun girdiler.
 * @returns Botun Ã¼rettiÄŸi cevabÄ± iÃ§eren bir Promise.
 */
export async function generateBotReply(input: BotReplyInput): Promise<BotReplyOutput> {
  return await generateBotReplyFlow(input);
}

/**
 * Genkit'in `defineFlow` metodu ile yapay zeka akÄ±ÅŸÄ±nÄ± tanÄ±mlÄ±yoruz.
 * Bu akÄ±ÅŸ, bir girdi alÄ±p (inputSchema), belirli adÄ±mlarÄ± iÅŸleyip, bir Ã§Ä±ktÄ± (outputSchema) Ã¼retir.
 */
const generateBotReplyFlow = ai.defineFlow(
  {
    name: 'generateBotReplyFlow',
    inputSchema: BotReplyInputSchema,
    outputSchema: BotReplyOutputSchema,
  },
  async (input) => {
    
    // GeÃ§miÅŸ sohbeti, yapay zeka modelinin anlayacaÄŸÄ± formata dÃ¶nÃ¼ÅŸtÃ¼r.
    const history = input.conversationHistory.map(turn => ({
      role: turn.isUser ? 'user' : 'model', // Mesaj kullanÄ±cÄ±dan mÄ±, modelden (bottan) mÄ±?
      content: [{ text: turn.message }],
    }));

    // Yapay zeka modelini, sohbet iÃ§in Ã¶zel olarak hazÄ±rlanmÄ±ÅŸ talimatlarla (prompt) Ã§aÄŸÄ±r.
    const { text } = await ai.generate({
      model: 'googleai/gemini-1.5-flash', // HÄ±zlÄ± ve etkili bir model kullanÄ±yoruz.
      prompt: `Sohbet geÃ§miÅŸi aÅŸaÄŸÄ±dadÄ±r. Bu sohbete uygun, kÄ±sa ve doÄŸal bir cevap ver.`,
      // Sistem talimatÄ±, yapay zekanÄ±n genel karakterini ve kurallarÄ±nÄ± belirler.
      system: botPersonaInstruction
        .replace('{{botName}}', input.botProfile.fullName)
        .replace('{{botAge}}', String(input.botProfile.age))
        .replace('{{userName}}', input.userName)
        .replace('{{location}}', turkishLocations[Math.floor(Math.random() * turkishLocations.length)]),
      history: history, // HazÄ±rlanan sohbet geÃ§miÅŸini buraya ekliyoruz.
      config: {
        // Ãœretilecek cevabÄ±n maksimum uzunluÄŸunu sÄ±nÄ±rlayarak kÄ±sa cevaplar almayÄ± garantileriz.
        maxOutputTokens: 50, 
      }
    });

    if (!text) {
      throw new Error('Yapay zeka bir cevap Ã¼retemedi.');
    }

    // Ãœretilen cevabÄ±, Ã§Ä±ktÄ± ÅŸemamÄ±za uygun formatta dÃ¶ndÃ¼r.
    return { reply: text.trim() };
  }
);
